   module Define_Variables
    !用来存储主程序和子程序中用到的变量以及数组
        implicit double precision(a-h,o-z)   
        !-------------------------------------------------------------------------------
        real::time_begin,time_end!用来计算程序运行时间的变量
        !-------------------------------------------------------------------------------
        integer::X_max,Y_max,Z_max,Num_Block!记录网格文件中三个方向上网格节点数的最大值、以及分区数
        !-------------------------------------------------------------------------------
        allocatable::Area(:,:,:,:),quality(:,:,:,:),area_1(:,:,:,:)!计算网格质量时用到的数组变量
        !-------------------------------------------------------------------------------
        allocatable :: num(:,:),number(:,:)
        !-------------------------------------------------------------------------------
        allocatable::Points_Position_initial(:,:,:,:,:)!用来记录程序中读到的最开始的网格节点
        allocatable::Wall_Points_Rotate(:,:,:,:,:)!用来记录物面边界旋转之后的节点坐标
        allocatable::Wall_Points_Position(:,:,:,:,:)!用来记录物面边界初始的节点
        !-------------------------------------------------------------------------------
        allocatable::Edge_distance(:,:,:,:,:)!Geometry中用来统计网格边长的数组变量
        !-------------------------------------------------------------------------------
        allocatable::coefficient(:,:,:,:,:)!TFI方法中α和β参数的值
        !-------------------------------------------------------------------------------
        allocatable::Wall_Points_Number(:,:)!用来记录Wall边界上的网格点数,用于节点旋转的循环中
        allocatable::BC_Type(:)
        !-------------------------------------------------------------------------------
        real::area_min=10.0
        real::area_max=0.0
        real::ave_quality_ini=0.0
        real::ave_quality_new=0.0
        real::sum=0
        real::Qe=90
        real::pi=acos(-1.0)
        real::maxquality=0.5
        !-------------------------------------------------------------------------------
        real::alpha!rotate_trans中的变量
        real::Alpha_Center!旋转中心与左下角的点的夹角
        !-------------------------------------------------------------------------------
        integer::Edge_Count!用来记录网格文件中物面边界的数量
        !-------------------------------------------------------------------------------
        real::X_Min=10000
        real::Y_Min=10000
        !-------------------------------------------------------------------------------

    end module

    program read_point_position
    
    use Define_Variables

     
     call CPU_TIME(time_begin)
     call Count_Max
     
     open(10,file="BC_Type.dat")
     read(10,*)Num_Block
     write(*,"(a25,i5)")"The num of Block is :",Num_Block
     call Cal_WallNumber
     !分配数组维数
     
     allocate(Points_Position_initial(Num_Block,X_max,Y_max,Z_max,3))
     allocate(Wall_Points_Position(Num_Block,X_max,Y_max,Z_max,3))
     allocate(num(Num_Block,3)) 
     allocate(Area(Num_Block,X_max,Y_max,Z_max),quality(Num_Block,X_max,Y_max,Z_max),area_1(Num_Block,X_max,Y_max,Z_max))
     allocate(Edge_distance(Num_Block,X_max,Y_max,Z_max,2))
     allocate(coefficient(Num_Block,X_max,Y_max,Z_max,3))
     allocate(Wall_Points_Number(4,2))
     allocate(Wall_Points_Rotate(4,X_max,Y_max,Z_max,3))
     allocate(BC_Type(8))
    
     !维数分配结束
      
     
     
     do ii=1,Num_Block
            read(10,*)num(ii,1),num(ii,2),num(ii,3)
            KMAX=num(ii,3)
            JMAX=num(ii,2)
            IMAX=num(ii,1)
            write(*,"(a5,i4,a3,a5,i4,a3,a5,i4)")"IMAX=",IMAX,"   ","JMAX=",JMAX,"   ","KAMX=",KMAX
            read(10,*)(((Points_Position_initial(ii,i,j,k,1),i=1,IMAX),j=1,JMAX),k=1,KMAX)
            read(10,*)(((Points_Position_initial(ii,i,j,k,2),i=1,IMAX),j=1,JMAX),k=1,KMAX)
            read(10,*)(((Points_Position_initial(ii,i,j,k,3),i=1,IMAX),j=1,JMAX),k=1,KMAX) 
            !write(*,*)(((Points_Position_initial(ii,i,j,k,1),i=1,IMAX),j=1,JMAX),k=1,KMAX)
        end do
        call geometry
        call Grid_Quality
        call TFI_Parameter
        call Read_Boundary_Condition
        call rotate(0.0,0.0,10.0)
    
    
    call cpu_time(time_end)
    
    !call Geometry
    !输出结束时cpu运行的时间
       write(*,"(a27,f10.7,a1)")"The program used time is :",time_end-time_begin,"s"
       !输出程序运行的时间
    end
